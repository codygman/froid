{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.widget.CompoundButton where

data CompoundButton = mutable native android.widget.CompoundButton

data OnCheckedChangeListener = mutable native android.widget.CompoundButton.OnCheckedChangeListener

native checkedChanged "froid.widget.CompoundButton.newCheckedChangeListener" :: (CompoundButton -> Bool -> IO ()) -> IO OnCheckedChangeListener

native module where {
    private static android.widget.CompoundButton.OnCheckedChangeListener
    newCheckedChangeListener(final Func.U<android.widget.CompoundButton, Func.U<Boolean, Func.U<RealWorld, Short>>> lambda) {
        return new android.widget.CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged (android.widget.CompoundButton buttonView, boolean isChecked) {
                try {
                    PreludeBase.TST.performUnsafe(
                        lambda.apply(Thunk.lazy(buttonView)).call()
                        .apply(Thunk.<Boolean>lazy(isChecked)).call()).call();
                } catch(RuntimeException re) {
                    re.printStackTrace();
                    throw re;
                }
            }
        };
    }
}