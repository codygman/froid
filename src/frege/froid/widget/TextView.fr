module froid.widget.TextView where

import froid.content.Context
import froid.graphics.Typeface
import froid.view.View
import froid.Types

data TextView = native android.widget.TextView where
    native new :: MutableIO Context -> STMutable RealWorld TextView
    native append :: MutableIO TextView -> String -> IO ()
    native setText :: MutableIO TextView -> String -> IO ()
    native getText :: MutableIO TextView -> IO CharSequence
    native getVisibility :: MutableIO TextView -> IO Int
    native setVisibility :: MutableIO TextView -> Int -> IO ()
    native setTypeface :: MutableIO TextView -> MutableIO Typeface -> IO ()
    native post :: MutableIO TextView -> MutableIO Runnable -> IO ()
    native invalidate :: MutableIO TextView -> IO ()
    native requestLayout :: MutableIO TextView -> IO ()
    getTextString :: MutableIO TextView -> IO String
    getTextString tv = liftM (\s -> s.toString) tv.getText

asTextView :: (Int -> IO (MutableIO View)) -> Int -> IO (MutableIO TextView)
asTextView find res = do
    v <- find res
    (fromView v >>= either (\cce -> error $ "Cast failed.") return) :: IO (MutableIO TextView)

instance ViewSub TextView where
    native fromView "(android.widget.TextView)" :: MutableIO View -> IO (ClassCastException | MutableIO TextView)

instance IsView TextView where
    native toView "(android.view.View)" :: MutableIO TextView -> IO (ClassCastException | MutableIO View)
