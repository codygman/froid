{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.widget.TextView where

import froid.content.Context
import froid.graphics.Typeface
import froid.view.View
import froid.Types

data TextView = mutable native android.widget.TextView where
    native new :: Context -> IO TextView
    native append :: TextView -> String -> IO ()
    native setText :: TextView -> String -> IO ()
    native getText :: TextView -> IO CharSequence
    native getVisibility :: TextView -> IO Int
    native setVisibility :: TextView -> Int -> IO ()
    native setTypeface :: TextView -> Typeface -> IO ()
    native post :: TextView -> MutableIO Runnable -> IO ()
    native invalidate :: TextView -> IO ()
    native requestLayout :: TextView -> IO ()
    getTextString :: TextView -> IO String
    getTextString tv = liftM (\s -> s.toString) tv.getText
    fromView :: (Int -> IO View) -> Int -> IO TextView
    fromView find res = do
        v <- find res
        (fromView' v >>= either (\cce -> error $ "Cast failed.") return) :: IO (TextView)


instance ViewSub TextView where
    native fromView' "(android.widget.TextView)" :: View -> IO (ClassCastException | TextView)

instance IsView TextView where
    native toView' "(android.view.View)" :: TextView -> IO (ClassCastException | View)
