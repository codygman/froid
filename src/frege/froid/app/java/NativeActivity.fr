{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.app.java.NativeActivity where

native module where {
    public static class FregeActivity extends android.app.Activity {
        Func.U<RealWorld, Short> onPauseLambda = null;
        Func.U<RealWorld, Short> onResumeLambda = null;
        Func.U<android.os.Bundle, Func.U<RealWorld, Short>> onSavedInstanceStateLambda = null;
        Func.U<Integer, Func.U<Integer, Func.U<PreludeBase.TMaybe<android.content.Intent>, Func.U<RealWorld, Short>>>> onActivityResultLambda = null;

        // executes io action given as parameter
        public void setOnPause(Func.U<RealWorld, Short> lambda) {
            this.onPauseLambda = lambda;
        }

        public void setOnResume(Func.U<RealWorld, Short> lambda) {
            this.onResumeLambda = lambda;
        }

        public void setOnSavedInstanceState(Func.U<android.os.Bundle, Func.U<RealWorld, Short>> lambda) {
            this.onSavedInstanceStateLambda = lambda;
        }

        public void setOnActivityResult(Func.U<Integer, Func.U<Integer, Func.U<PreludeBase.TMaybe<android.content.Intent>, Func.U<RealWorld, Short>>>> onActivityResultLambda) {
            this.onActivityResultLambda = onActivityResultLambda;
        }

        // reflection methods
        private Object invokeStaticActivityMethod(String methodName, Object[] args, String signature) {
            java.lang.reflect.Method fregeMethod = null;
            try {
                fregeMethod = this.getClass().getDeclaredMethod(methodName, FregeActivity.class, Lazy.class);
            } catch (NoSuchMethodException nsm) {
                android.util.Log.e("FROID SYSTEM",
                    "Method " + methodName + " is not defined. Make sure your onCreate Function is defined as " + signature,
                    nsm);
                this.finishAffinity();
            }

            Object invokedMethod = null;

            try {
                invokedMethod = fregeMethod.invoke(null, args);
            } catch (Exception e) { // TODO: consult Frege documentation
                android.util.Log.e("FROID SYSTEM", "Failed to call " + methodName, e);
                this.finishAffinity();
            }
            return invokedMethod;
        }

        private Object run(Object invokedMethod) {
            if (invokedMethod == null) return null;
            Func.U<Object,Short> res = RunTM.<Func.U<Object,Short>>cast(
                    invokedMethod).call();
            return PreludeBase.TST.run(res).call();
        }

        @Override
        public void onCreate(android.os.Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            PreludeBase.TMaybe<android.os.Bundle> sis = savedInstanceState == null ?
             PreludeBase.TMaybe.DNothing.<android.os.Bundle>mk(): 
             PreludeBase.TMaybe.DJust.<android.os.Bundle>mk(Thunk.<android.os.Bundle>lazy(savedInstanceState));
            Object invokedOnCreate = invokeStaticActivityMethod("onCreate", new Object[] {this, sis}, "onCreate :: Activity -> Maybe Bundle -> IO ()");
            run(invokedOnCreate);   
        }

        @Override
        public void onPause() {
            super.onPause();
            run(onPauseLambda);
        }

        @Override
        public void onResume() {
            super.onResume();
            run(onResumeLambda);
        }

        @Override
        public void onSaveInstanceState(android.os.Bundle savedInstanceState) {
            super.onSaveInstanceState(savedInstanceState);
            if (onSavedInstanceStateLambda != null)
                run(onSavedInstanceStateLambda.apply(Thunk.<android.os.Bundle>lazy(savedInstanceState)).call());
        }

        @Override
        protected void onActivityResult(int requestCode, int resultCode, android.content.Intent data) {
            if (onActivityResultLambda == null) return;
            // wrap android.content.Intent in maybe
            PreludeBase.TMaybe<android.content.Intent> d = data == null ?
                PreludeBase.TMaybe.DNothing.<android.content.Intent>mk(): 
                PreludeBase.TMaybe.DJust.<android.content.Intent>mk(Thunk.<android.content.Intent>lazy(data));
            PreludeBase.TST.performUnsafe(
                onActivityResultLambda
                .apply(Thunk.<Integer>lazy(requestCode)).call()
                .apply(Thunk.<Integer>lazy(resultCode)).call()
                .apply(Thunk.lazy(d)).call()).call();
        }
    }
}