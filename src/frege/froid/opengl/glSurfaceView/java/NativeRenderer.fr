{-
    Copyright 2016-2017 Michael Chavinda
    This file is part of froid.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
-}

module froid.opengl.glSurfaceView.java.NativeRenderer where

import froid.javax.microedition.khronos.opengles.GL10
import froid.javax.microedition.khronos.egl.EGLConfig

data Delegator = Delegator { onDrawFrame    :: Maybe (MutableIO GL10 -> IO ())
                           , onSurfaceCreated :: Maybe (MutableIO GL10 -> MutableIO EGLConfig -> IO ())
                           , onSurfaceChanged :: Maybe (MutableIO GL10 -> Int -> Int -> IO ())
                           }

native module where {

    public static FregeRenderer delegate(TDelegator delegator) {
        FregeRenderer renderer = new FregeRenderer();
        renderer.delegator = delegator;
        return renderer;
    }

    public static class FregeRenderer implements android.opengl.GLSurfaceView.Renderer {

        TDelegator delegator = null;

        public void onDrawFrame(javax.microedition.khronos.opengles.GL10 gl) {
            if (TDelegator.onDrawFrame(delegator).asJust() != null)
                        PreludeBase.TST.performUnsafe(
                            TDelegator.onDrawFrame(delegator).asJust().mem1.call()
                            .apply(Thunk.lazy(gl)).call()).call();
        }

        public void onSurfaceChanged(javax.microedition.khronos.opengles.GL10 gl, int width, int height) {
            if (TDelegator.onSurfaceChanged(delegator).asJust() != null)
                        PreludeBase.TST.performUnsafe(
                            TDelegator.onSurfaceChanged(delegator).asJust().mem1.call()
                            .apply(Thunk.lazy(gl)).call()
                            .apply(Thunk.<Integer>lazy(width)).call()
                            .apply(Thunk.<Integer>lazy(height)).call()).call();
        }

        public void onSurfaceCreated(javax.microedition.khronos.opengles.GL10 gl, javax.microedition.khronos.egl.EGLConfig config) {
            if (TDelegator.onSurfaceCreated(delegator).asJust() != null)
                        PreludeBase.TST.performUnsafe(
                            TDelegator.onSurfaceCreated(delegator).asJust().mem1.call()
                            .apply(Thunk.lazy(gl)).call()
                            .apply(Thunk.lazy(config)).call()).call();
        }
    }
}